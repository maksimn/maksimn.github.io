Комментарии по поводу ошибок и их исправления.

1. Без подключения к серверу приложение не работает.

Во-первых, мной было найдено основное руководство по назначению ServiceWorker и работе с ним:
https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers.

Сначала было обнаружено, что регистрация ServiceWorker'а происходит без вывода отладочной 
информации о результате этой операции, поэтому результат был неясен. Код был дополнен так:

navigator.serviceWorker.register('/js/worker.js').then(function (reg) {
   console.log('Registration succeeded. Scope is ' + reg.scope);
}).catch(function (error) {
   console.log('Registration failed with ' + error);
});

После этого было обнаружено, что регистрация ServiceWorker происходит неудачно и файле с его кодом
есть синтаксическая ошибка в 36-й строке. Эта ошибка была исправлена.

Далее обнаружилось, что приложение всё равно не работает без подключения к серверу. После 
некоторого анализа данной проблемы выяснилось, что у данного ServiceWorker неправильный scope и он
не может обработать запрос (об этом также написано в приведённом выше руководстве).

Поэтому файл worker.js был вынесен из папки js на уровень выше. Все важные пути к кэшируемым файлам
также были изменены. С этими изменениями приложение работает в режиме оффлайн и позволяет 
просматривать данные о студентах.

===================================================================================================
2. Не всегда обновляется список студентов после добавления нового.

Примечание: Изначально мы имеем код, исправленный по п. 1.

2.1. Первый баг, который можно отметить -- если добавить в список студентов (и все новые записи
сначала будут видны) и затем F5, то в окне будет выведен необновленный список студентов, как в 
предыдущих запросах. При повторном F5 выводит правильный список студентов. Очень возможно, эта ошибка 
имеет в точности ту же природу, что и ошибка 2.2.

2.2. Баг с добавлением студента в список

Условия бага на самом атомарном уровне:
1) Заходим на localhost:port.
2) F5 - обновить страницу. Если мы уже работали ранее, то, как правило, видим другую -- старую 
версию страницы, что само по себе неправильно. Обновляемся снова. Страница вернулась в исходное 
(п.1)) состояние.
3) Добавляем информацию о новом студенте. Изменение не отображается.
4) Перезапускаем страницу -- теперь изменение отображается.

2.3. После этого, нажав кнопку "Обновить" для нескольких студентов и пытаясь добавить еще одного, 
привел страницу в полностью неработоспособное состояние. Выскакивает alert с надписью "Что-то пошло
не так!". 
---------------------------------------------------------------------------------------------------

Баг обновления при добавлении очевидным образом связан с тем, как закодирован ServiceWorker и его 
работа с кэшем, а именно обработка события fetch. 

Наиболее подозрительно выглядят строки

if (/^\/api\/v1/.test(requestURL.pathname)) {
   return event.respondWith(
      Promise.race([
         fetchAndPutToCache(event.request),
         getFromCache(event.request)
      ])
   );
}

В качестве решения можно предложить устранить "гонку" и вместо этого написать

if (/^\/api\/v1/.test(requestURL.pathname)) {
   return event.respondWith(fetchAndPutToCache(event.request));
}

